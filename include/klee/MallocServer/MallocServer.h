#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <errno.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <string.h>
#include <string>

struct heapop_req{
    size_t type;
    size_t arg1;
    size_t arg2;
};
typedef struct heapop_req heapop_req;

// for malloc and realloc, 
struct heapop_retval{
    // for malloc and realloc, return the allocated pointer
    // for free, just return -1.
    // can't think of anything else for now, but may add something later into
    // this struct
    size_t ret_ptr;
};

typedef struct heapop_retval heapop_retval;

class MallocServer{
public:
  int socketfds[2];
  std::string MallocServerExecPath;
  MallocServer();
  ~MallocServer() {
  // do nothing
  }
  void InitSockets();
  int InvokeMallocServer(std::string ExecPathFromCLI);
  int MallocServerHandshake();
  size_t SendMallocRequest(size_t size);
  void SendFreeRequest(size_t ptr_addr);
  size_t SendReallocRequest(size_t ptr_addr, size_t new_size);
};

extern MallocServer globalMallocServer;
